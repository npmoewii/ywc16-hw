{"version":3,"sources":["api.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","getSchools","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","pageSize","pageNo","res","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","this","_x","_x2","apply","arguments","findSchoolWithOption","_ref3","_callee3","colNo","value","property","URL","_context3","_x6","_x7","_x8","_x9","fields","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loader","react_default","createElement","spin","size","className","onChange","e","setState","defineProperty","target","name","onSelectChange","filter","search","hasMoreItems","schools","loading","currPage","loadItems","page","state","input","getSchool","toConsumableArray","renderSchool","map","school","card","key","title","field","id","includes","href","rel","inputRef","focus","_this2","Group","compact","es_select","Option","placeholder","ref","onKeyPress","es_button","type","onClick","react_infinite_scroller_default","pageStart","loadMore","hasMore","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.088cd0ab.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_URL =\n  'https://api.data.go.th/search_virtuoso/api/dataset/query?&dsname=vir_501_1497234362&path=vir_501_1497234362';\n\nconst getSchools = async (pageSize, pageNo) => {\n  const res = await axios.get(\n    `${API_URL}&loadAll=0&pageNo=${pageNo}&pageSize=${pageSize}`\n  );\n  return res.data;\n};\n\nexport const findSchoolWithDistrict = async (district, pageSize, pageNo) => {\n  const res = await axios.get(\n    `${API_URL}&property=col_4&operator=CONTAINS&valueLiteral=${district}&loadAll=0&pageNo=${pageNo}&pageSize=${pageSize}`\n  );\n  return res.data;\n};\n\nexport const findSchoolWithOption = async (colNo, value, pageSize, pageNo) => {\n  const property = colNo === 0 ? 'id' : 'col_' + colNo;\n  const URL = `${API_URL}&property=${property}&operator=CONTAINS&valueLiteral=${value}&loadAll=0&pageNo=${pageNo}&pageSize=${pageSize}`;\n  const res = await axios.get(URL);\n  return res.data;\n};\n\nexport default getSchools;\n","import React, { Component } from 'react';\nimport InfiniteScoll from 'react-infinite-scroller';\nimport { Card, Input, Button, Spin, Select } from 'antd';\nimport './App.css';\nimport getSchool, { findSchoolWithOption } from './api';\n\nconst fields = [\n  'ลำดับ',\n  'SchoolID',\n  'SchoolName',\n  'SubDistrict',\n  'District',\n  'Province',\n  'PostCode',\n  'SchoolType',\n  'Department',\n  'Telephone',\n  'Fax',\n  'Website',\n  'Email',\n  'Latitude',\n  'Longtitude'\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n      filter: 0,\n      schools: [],\n      pageSize: 3,\n      hasMoreItems: false,\n      loading: false,\n      currPage: 1\n    };\n  }\n\n  componentDidMount() {\n    this.inputRef.focus();\n  }\n\n  loader = <Spin size=\"large\" className=\"loader\" />;\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSelectChange = value => {\n    this.setState({\n      filter: value\n    });\n  };\n\n  search = () => {\n    this.setState({\n      hasMoreItems: true,\n      schools: [],\n      loading: true,\n      currPage: 1\n    });\n  };\n\n  loadItems = async page => {\n    let data = [];\n    if (this.state.input === '')\n      data = await getSchool(this.state.pageSize, this.state.currPage);\n    else\n      data = await findSchoolWithOption(\n        this.state.filter,\n        this.state.input,\n        this.state.pageSize,\n        this.state.currPage\n      );\n    if (data !== [] && data[0]['1@SchoolID'] !== '-')\n      this.setState({\n        schools: [...this.state.schools, ...data],\n        loading: false,\n        currPage: this.state.currPage + 1\n      });\n    else\n      this.setState({\n        hasMoreItems: false,\n        loading: false\n      });\n  };\n\n  renderSchool = () => {\n    return this.state.schools.map(school => {\n      return (\n        <Card\n          className=\"schoolItem\"\n          key={school['1@SchoolID']}\n          title={school['2@SchoolName']}\n        >\n          {fields.map((field, id) =>\n            [1, 2, 3, 4, 5, 6, 7, 9].includes(id) ? (\n              <p key={school['1@SchoolID'] + field}>\n                <label className=\"info-label\">{field}: </label>{' '}\n                {school[id + '@' + field]}\n              </p>\n            ) : null\n          )}\n          <p key={school['1@SchoolID'] + 'Website'}>\n            <label className=\"info-label\">Website: </label>\n            {school['11@Website'] === '-' ? (\n              '-'\n            ) : (\n              <a\n                href={school['11@Website']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {school['11@Website']}\n              </a>\n            )}\n          </p>\n        </Card>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"main\">\n            <div className=\"title\">\n              <h1>THAILAND's SCHOOL INFORMATION</h1>\n              <h5>\n                <em>\n                  <b>Retrieve from: </b>\n                  <a href=\"https://api.data.go.th\">https://api.data.go.th</a>\n                </em>\n              </h5>\n            </div>\n            <div className=\"search\">\n              <Input.Group size=\"large\" compact>\n                <Select\n                  name=\"filter\"\n                  onChange={this.onSelectChange}\n                  value={this.state.filter}\n                  className=\"search-select\"\n                >\n                  {fields.map((field, id) => (\n                    <Select.Option key={id} value={id}>\n                      {field}\n                    </Select.Option>\n                  ))}\n                </Select>\n                <Input\n                  className=\"search-input\"\n                  size=\"large\"\n                  placeholder={'Search by ' + fields[this.state.filter] + '...'}\n                  onChange={this.onChange}\n                  value={this.state.input}\n                  name=\"input\"\n                  ref={input => {\n                    this.inputRef = input;\n                  }}\n                  onKeyPress={e => {\n                    if (e.key === 'Enter') this.search();\n                  }}\n                />\n              </Input.Group>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                onClick={this.search}\n                loading={this.state.loading}\n              >\n                Search\n              </Button>\n            </div>\n          </div>\n          {this.state.data !== [] || this.state.loading ? (\n            <InfiniteScoll\n              pageStart={0}\n              loadMore={this.loadItems}\n              hasMore={this.state.hasMoreItems}\n              loader={this.loader}\n              className=\"showSchool\"\n            >\n              {this.renderSchool()}\n            </InfiniteScoll>\n          ) : null}\n        </header>\n        <footer className=\"App-footer\">\n          <a href=\"https://www.freepik.com/free-vector/school-building-with-small-fence-around_3297805.htm\">\n            Background by Katemangostar\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}